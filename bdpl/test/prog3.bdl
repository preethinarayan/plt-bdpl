//
// This is a BDPL program to parse a TIFF file
//
file f1;
struct tiff_file
{
  struct image_file_header
  {
    byte[2] endianness      
      valid { 0x4949 , 0x4d4d }  
        ok  { 
	    if(endianness == 0x4949)
                set("endian" => "little",f1);
	    else
		set("endian" => "big",f1);
            }
        nok { exit("bad endianness byte"); };
    byte[2] magic valid {42} nok {exit("bad magic");};
    byte[4] ifd_pointer;
  }header;
}tiff;

struct image_file_directory
{
  byte[2] numEntries;
  struct image_file_directory_entry
  {
      byte[2] tag;
      byte[2] typefield;
      byte[4] count;
      byte[4] value;
  }ifdentry;
  byte[4] nextifdpointer;
}[*] ifd;

byte[5] aaa;
read("hello-world.tiff",f1);
tiff.header <- f1;
$f1 = tiff.header.ifd_pointer;

type struct image_file_directory temp_idf;
for(;1;)
{
  temp_idf <- f1 ;
  idf <- temp_idf;
  if(temp_idf.nextifdpointer > 0 && temp_idf.nextifdpointer < $#f1 ) 
  { $f1 = temp_idf.nextifdpointer; }
  else { break; }
}

print("tiff file parsing complete");



//--------- End of TIFF Parser ------------



