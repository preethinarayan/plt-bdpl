byte[4]
	a 	("endian" => "big","maxsize" => "100") 
		(fieldsize 50);
byte[4]		
	b 	("endian" => "big","maxsize" => "100") 
		(fieldsize 50) 
	verify {0x30} 
		then {break;} 
		else {continue;} 
	optional 
		on x>3 ;

int[*] A_a_star;


struct xxy
{
	struct xx
	{
		int[10] aa;
	}[12] bb("endian" => "lil");
}cc;

struct ifd_header
{
	byte[4] 
		x 	("endian" => "big","maxsize" => "100") 
			(fieldsize 50) 
		verify {0x30} 
			then {break;} 
			else {continue;} 
		optional 
			on x>3 ;
	byte[4] 
		y 	("endian" => "big","maxsize" => "100") 
			(fieldsize 50) 
		verify {0x30} 
			then {break;} 
			else {continue;} 
		optional 
			on x>3 ;
}[4] 
	aa 	("endian" => "big","maxsize" => "100")
		(fieldsize 50);
		
//	b 	("endian" => "big","maxsize" => "100") 
//		(fieldsize 50) 
//	verify {0x30} 
//		then {break;} 
//		else {continue;} 
//	optional 
//		on x>3 ;



struct normal_struct
{
	struct inner
	{
		int a;
		int b;
		int c;
//	int[*] int_array;
		byte d;
	} inner_ob;
	int just;

}[5]normal_st_ob;

type struct normal_struct a_var;

int af (fieldsize normal_st_ob[0].inner_ob.d);
